services:
  gateway:
    build:
      context: ./
      dockerfile: gateway/Dockerfile
      target: prod
      args:
        SERVICE: gateway
    volumes:
      - ./gateway/src:/app/gateway/src
      - ./gateway/configuration:/app/configuration
    ports:
      - "8083:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - SERVICE=gateway
      - APP_ENVIRONMENT=production

  engine:
    build:
      context: ./
      dockerfile: engine/Dockerfile
      target: prod
      args:
        SERVICE: engine
    volumes:
      - ./engine/src:/app/engine/src
      - ./engine/configuration:/app/configuration
    ports:
      - "8081:8081"
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - SERVICE=engine
      - APP_ENVIRONMENT=production

  storage:
    build:
      context: ./
      dockerfile: storage/Dockerfile
      target: prod
      args:
        SERVICE: storage
    volumes:
      - ./storage/src:/app/storage/src
      - ./storage/configuration:/app/configuration
    ports:
      - "8082:8082"
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - SERVICE=storage
      - APP_ENVIRONMENT=production

  # Dependency services
  rabbitmq:
    image: rabbitmq:4.1-rc-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:6.2-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:17
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  rabbitmq_data:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local
